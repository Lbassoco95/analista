#!/usr/bin/env python3
"""
Ejemplo de Uso del Sistema Estrat√©gico
Demuestra el uso completo del GPT estrat√©gico para an√°lisis de mercado
"""

import asyncio
import json
import logging
from datetime import datetime

from gpt_estrategico import GPTEstrategico

# Configurar logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def ejemplo_analisis_completo():
    """Ejemplo de an√°lisis completo de mercado"""
    print("üöÄ Iniciando Ejemplo de An√°lisis Estrat√©gico")
    print("=" * 60)
    
    # Inicializar GPT estrat√©gico
    gpt = GPTEstrategico()
    
    # Ejemplo 1: An√°lisis de wallet crypto en M√©xico
    print("\nüìä EJEMPLO 1: Wallet Crypto en M√©xico")
    print("-" * 40)
    
    consulta_1 = "Queremos lanzar una wallet crypto en M√©xico para freelancers. ¬øQu√© sabes del mercado y qu√© nos recomiendas?"
    
    try:
        analisis_1 = await gpt.analizar_mercado_completo(consulta_1)
        
        print(f"‚úÖ An√°lisis completado en {len(analisis_1.get('insights_integrados', []))} insights")
        print(f"üìÑ Documentos generados: {len(analisis_1.get('documentos_generados', []))}")
        print(f"üéØ Recomendaciones: {len(analisis_1.get('recomendaciones_finales', []))}")
        
        # Mostrar insights principales
        print("\nüí° Insights Principales:")
        for i, insight in enumerate(analisis_1.get('insights_integrados', [])[:3], 1):
            print(f"  {i}. {insight}")
        
        # Mostrar recomendaciones
        print("\nüéØ Recomendaciones Clave:")
        for i, rec in enumerate(analisis_1.get('recomendaciones_finales', [])[:3], 1):
            print(f"  {i}. {rec.get('recomendacion', 'N/A')}")
            print(f"     Acci√≥n: {rec.get('accion', 'N/A')}")
        
    except Exception as e:
        print(f"‚ùå Error en an√°lisis 1: {str(e)}")
    
    # Ejemplo 2: An√°lisis de KYC en Colombia
    print("\nüìä EJEMPLO 2: KYC en Colombia")
    print("-" * 40)
    
    consulta_2 = "Vamos a lanzar una soluci√≥n de KYC para fintechs en Colombia. Necesitamos an√°lisis de mercado y plan de lanzamiento."
    
    try:
        analisis_2 = await gpt.analizar_mercado_completo(consulta_2)
        
        print(f"‚úÖ An√°lisis completado en {len(analisis_2.get('insights_integrados', []))} insights")
        
        # Mostrar estrategia de entrada
        estrategia = analisis_2.get('estrategia_comercial', {})
        if estrategia:
            print(f"\nüöÄ Estrategia de Entrada:")
            print(f"  Enfoque: {estrategia.get('estrategia_entrada', {}).get('enfoque', 'N/A')}")
            print(f"  Precio Sugerido: {estrategia.get('precio_sugerido', {}).get('precio_base', 'N/A')} USD")
        
        # Mostrar plan de producto
        plan = analisis_2.get('plan_producto', {})
        if plan:
            print(f"\nüìã Plan de Producto:")
            print(f"  Fases: {len(plan.get('fases', []))}")
            print(f"  Timeline: {plan.get('timeline', {}).get('duracion_total', 'N/A')}")
        
    except Exception as e:
        print(f"‚ùå Error en an√°lisis 2: {str(e)}")
    
    # Ejemplo 3: An√°lisis de onboarding remoto en Per√∫
    print("\nüìä EJEMPLO 3: Onboarding Remoto en Per√∫")
    print("-" * 40)
    
    consulta_3 = "Vamos a lanzar una nueva soluci√≥n de onboarding remoto para fintechs en Per√∫. ¬øQu√© necesitamos saber?"
    
    try:
        analisis_3 = await gpt.analizar_mercado_completo(consulta_3)
        
        print(f"‚úÖ An√°lisis completado en {len(analisis_3.get('insights_integrados', []))} insights")
        
        # Mostrar buyer persona
        buyer_persona = analisis_3.get('estrategia_comercial', {}).get('buyer_persona', {})
        if buyer_persona:
            print(f"\nüë§ Buyer Persona:")
            print(f"  Nombre: {buyer_persona.get('nombre', 'N/A')}")
            print(f"  Edad: {buyer_persona.get('edad', 'N/A')}")
            print(f"  Ingresos: {buyer_persona.get('ingresos', 'N/A')}")
            print(f"  Necesidades: {', '.join(buyer_persona.get('necesidades', [])[:2])}")
        
        # Mostrar recursos comerciales
        recursos = analisis_3.get('estrategia_comercial', {}).get('recursos_comerciales', {})
        if recursos:
            equipo = recursos.get('equipo', {})
            print(f"\nüë• Equipo Necesario:")
            for rol, cantidad in equipo.items():
                print(f"  {rol}: {cantidad} personas")
        
    except Exception as e:
        print(f"‚ùå Error en an√°lisis 3: {str(e)}")

async def ejemplo_consulta_historial():
    """Ejemplo de consulta de historial"""
    print("\nüìö EJEMPLO: Consulta de Historial")
    print("-" * 40)
    
    gpt = GPTEstrategico()
    
    try:
        # Consultar historial
        historial = await gpt.consultar_historial()
        
        print(f"üìä An√°lisis en historial: {len(historial)}")
        
        if historial:
            print("\nüìã √öltimos An√°lisis:")
            for i, analisis in enumerate(historial[:3], 1):
                print(f"  {i}. {analisis.get('producto', 'N/A')} en {analisis.get('pais', 'N/A')}")
                print(f"     Fecha: {analisis.get('timestamp', 'N/A')}")
                print(f"     Estado: {analisis.get('estado', 'N/A')}")
        
    except Exception as e:
        print(f"‚ùå Error consultando historial: {str(e)}")

async def ejemplo_retroalimentacion():
    """Ejemplo de an√°lisis de retroalimentaci√≥n"""
    print("\nüîÑ EJEMPLO: An√°lisis de Retroalimentaci√≥n")
    print("-" * 40)
    
    gpt = GPTEstrategico()
    
    try:
        # Datos de ventas simulados
        datos_ventas = {
            'precio_real': 35.0,  # USD
            'adopcion_real': 65,  # %
            'mrr_real': 45000,    # USD
            'cac_real': 450,      # USD
            'churn_real': 4.5,    # %
            'periodo': '6 meses'
        }
        
        # Simular ID de an√°lisis (en producci√≥n vendr√≠a de Supabase)
        id_analisis = "ejemplo_123"
        
        print("üìä Analizando retroalimentaci√≥n de ventas...")
        print(f"  Precio Real: ${datos_ventas['precio_real']}")
        print(f"  Adopci√≥n Real: {datos_ventas['adopcion_real']}%")
        print(f"  MRR Real: ${datos_ventas['mrr_real']:,}")
        
        # En producci√≥n, esto analizar√≠a datos reales
        print("\n‚úÖ An√°lisis de retroalimentaci√≥n completado")
        print("üí° Ajustes recomendados generados")
        
    except Exception as e:
        print(f"‚ùå Error en retroalimentaci√≥n: {str(e)}")

async def ejemplo_documentos():
    """Ejemplo de generaci√≥n de documentos"""
    print("\nüìÑ EJEMPLO: Generaci√≥n de Documentos")
    print("-" * 40)
    
    gpt = GPTEstrategico()
    
    consulta = "Queremos lanzar firma digital en M√©xico para notar√≠as y abogados"
    
    try:
        analisis = await gpt.analizar_mercado_completo(consulta)
        
        documentos = analisis.get('documentos_generados', [])
        
        print(f"üìÑ Documentos generados: {len(documentos)}")
        
        for i, doc in enumerate(documentos, 1):
            print(f"\n  {i}. {doc.get('titulo', 'N/A')}")
            print(f"     Tipo: {doc.get('tipo', 'N/A')}")
            print(f"     Formato: {doc.get('formato', 'N/A')}")
            
            # Mostrar preview del contenido
            contenido = doc.get('contenido', '')
            if contenido:
                preview = contenido[:100] + "..." if len(contenido) > 100 else contenido
                print(f"     Preview: {preview}")
        
    except Exception as e:
        print(f"‚ùå Error generando documentos: {str(e)}")

async def main():
    """Funci√≥n principal"""
    print("üéØ SISTEMA ESTRAT√âGICO - DEMOSTRACI√ìN COMPLETA")
    print("=" * 60)
    print(f"Fecha: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("Este script demuestra las capacidades del sistema estrat√©gico")
    print("para an√°lisis de mercado, estrategia comercial y planificaci√≥n.")
    
    try:
        # Ejemplo 1: An√°lisis completo
        await ejemplo_analisis_completo()
        
        # Ejemplo 2: Consulta de historial
        await ejemplo_consulta_historial()
        
        # Ejemplo 3: Retroalimentaci√≥n
        await ejemplo_retroalimentacion()
        
        # Ejemplo 4: Documentos
        await ejemplo_documentos()
        
        print("\n" + "=" * 60)
        print("‚úÖ DEMOSTRACI√ìN COMPLETADA")
        print("\nüéØ Pr√≥ximos pasos:")
        print("1. Configurar variables de entorno (.env)")
        print("2. Instalar dependencias: pip install -r requirements.txt")
        print("3. Configurar APIs (Perplexity, SerpAPI, Brave)")
        print("4. Ejecutar an√°lisis reales")
        print("5. Monitorear resultados y ajustar estrategias")
        
    except Exception as e:
        print(f"\n‚ùå Error en demostraci√≥n: {str(e)}")
        print("Verificar configuraci√≥n y dependencias")

if __name__ == "__main__":
    asyncio.run(main()) 